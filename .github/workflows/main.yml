name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
  DOCKER_HUB_REPOSITORY: ${{ secrets.DOCKER_HUB_REPOSITORY }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USER }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ github.sha }}
  CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }} ## public api нашего хоста где будем разворачиваться
  SERVER_USER: ${{ secrets.SERVER_USER }} ## с убунтой например
  SERVER_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} ## все переменные забиваются в Settings > Secrets And Variables > Actions
  PYTHON_VERSION: '3.x'
  LINTERS: 'ruff'
  # LINTER_CMD: 'ruff check src'
  LINTER_RUFF_CMD: 'ruff check final_project'
  LINTER_FLAKE8_CMD: 'flake8 final_project'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 # копируем репозиторий внутрь раннера
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ${{ env.LINTERS }}
    - name: Run linter
      run: |
        ${{ env.LINTER_RUFF_CMD }}
        ${{ env.LINTER_FLAKE8_CMD }}

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 # копируем репозиторий внутрь раннера
    - name: Checkout repository
      run: ls -la
    - name: Build Docker image
      run: docker build -f final_project/Dockerfile.prod -t ${{ env.IMAGE_NAME }} . # билдим образ
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_HUB_USER }}
        password: ${{ env.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Push image to Docker Hub
      run: docker push ${{ env.IMAGE_NAME }} # пушим в докер-хаб с использованием токена

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SERVER_HOST }} # подключаемся по ssh к нашему сервер-хосту
        username: ${{ env.SERVER_USER }}
        key: ${{ env.SERVER_SSH_PRIVATE_KEY }}
        script: | # пулим, стопаем и дропаем предыдущий кон-р (если такой был), и запускаем новый с пробросом портов
          docker pull ${{ env.IMAGE_NAME }}
          docker stop ${{ env.CONTAINER_NAME }} || true
          docker rm ${{ env.CONTAINER_NAME }} || true
          docker run -d -p 8000:8000 --name ${{ env.CONTAINER_NAME }} ${{ env.IMAGE_NAME }}